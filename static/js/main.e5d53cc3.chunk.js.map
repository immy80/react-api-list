{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Button","styled","button","Heading","h2","Main","div","primary","Input","input","List","li","App","useState","loading","users","apiUsers","setApiUsers","currentUser","name","email","allUsers","list","setList","error","setError","sortOrder","setSortOrder","fetchUsers","a","axios","get","response","data","useEffect","displayApiUsers","map","user","index","setCurrentUser","e","target","value","canUserBeAddedToList","console","log","foundUserInApi","find","foundUserInMyList","className","onSubmit","preventDefault","id","type","placeholder","onChange","length","onClick","ascendingOrder","usersSorted","sort","b","sortUsers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5d53cc3.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport axios from 'axios';\nimport './App.css';\nimport styled from 'styled-components';\n\n\nconst Button = styled.button`\nfont-family: sans-serif;\nfont-size: 1.3rem;\nmargin-top: 10px;\nborder: none;\nborder-radius: 5px;\nbackground-color: orangered;\ncolor: white;\npadding: 10px;\ntransition: ease 0.5s all;\n&:hover{\n  background-color: blue;\n}`\n\nconst Heading = styled.h2`\nfont-size: 30px;\nfont-weight: bold;\ncolor: black;\ntext-align: center;\n`\n\nconst Main = styled.div`\nbackground-color: ${({primary}) =>(primary ? 'orange' : 'none')};\nborder-radius: 0.5rem;\nwidth: 40%;\ntext-align:center;\n`\nconst Input = styled.input`\nborder-radius: .5em;\nwidth: 80%;\npadding: 0.5em;\nborder: 1px solid gray;\n`\n\nconst List = styled.li`\nfont-size: 20px;\nfont-family: sans-serif;\nfont-weight: bold;\ncolor: ${({primary}) =>(primary ? 'black' : 'white')};\ntext-align:center;\npadding: 0 20px 15px;\nlist-style: none;\n`\n\n\nfunction App() {\n  const [apiUsers, setApiUsers] = useState({\n    loading: false,\n    users: []\n  });\n  const [list, setList ] = useState({\n    currentUser: {\n      name: \"\",\n      email: \"\"\n    }, \n    allUsers: []\n  });\n  const [error, setError] = useState();\n  const [sortOrder, setSortOrder] = useState(true);\n\n  const fetchUsers = async () => {\n    setApiUsers({\n      ...apiUsers,\n      loading: true\n    })\n\n    const response = await axios.get('https://8ee41f94-d4f4-439d-8233-e573edca74ff.mock.pstmn.io/users');\n    setApiUsers({\n      loading: false,\n      users: response.data.data\n    });\n  }\n  \n  useEffect(() => {\n    fetchUsers();\n  }, [])\n\n  const displayApiUsers = apiUsers.users.map((user, index) => {\n    return <ul>\n            <List primary key={index}>Name: {user.name} </List>\n            <List>Email: {user.email}</List>\n          </ul>\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    console.log(list.currentUser)\n    canUserBeAddedToList(list.currentUser.email)\n    \n    if(canUserBeAddedToList(list.currentUser.email)) {\n      setList({\n        currentUser: {\n          name: \"\", \n          email: \"\"\n        },\n        allUsers: [\n          ...list.allUsers,\n          list.currentUser\n        ]\n      })\n    } else {\n\n    }\n  }\n\n  const setCurrentUser = (e) => {\n    if(error) {\n      setError(\"\")\n    }\n    setList({\n      ...list,\n      currentUser: {\n        ...list.currentUser,\n        [e.target.name]: e.target.value\n      }\n    })\n  }\n\n  const allUsers = list.allUsers.map((user, index) => {\n    return <ul>\n            <List primary key={index}>Name: {user.name}</List> \n            <List> Email: {user.email}</List>\n          </ul>\n  });\n\n  const canUserBeAddedToList = (email) => {\n    console.log(typeof email);\n    const foundUserInApi = apiUsers.users.find(user => {\n      return user.email === email\n    })\n\n    const foundUserInMyList = list.allUsers.find(user => {\n      return user.email === email\n    })\n\n    if(foundUserInApi && !foundUserInMyList) {\n      return true\n    } else if(!foundUserInApi) {\n      setError(\"User is not in the API list\")\n      return false\n    } else {\n      setError(\"User is already in my list\")\n      return false\n    }\n  }\n\n  const sortUsers = (ascendingOrder) => {\n    const usersSorted = list.allUsers.sort(function(a, b){\n      if(ascendingOrder) {\n        if(a.name < b.name) { return -1; }\n        if(a.name > b.name) { return 1; }\n      } else {\n        if(a.name > b.name) { return -1; }\n        if(a.name < b.name) { return 1; }\n      }\n      return 0;\n    })\n\n    setList({\n      ...list,\n      allUsers: [...usersSorted]\n    })\n\n    setSortOrder(!sortOrder);\n    \n  }\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"title\">\n        <h1>API Users List</h1>\n      </div>\n\n      <div className=\"main\">\n      <Main primary>\n        <form onSubmit={handleSubmit}> \n          <Heading>Enter Details</Heading>\n          <Input \n            id=\"userName\" \n            type=\"text\" \n            name=\"name\" \n            placeholder=\"Enter user name\"\n            onChange={setCurrentUser}\n            value={list.currentUser.name}  \n          />\n          <br />\n          <br />\n          <Input \n            id=\"userEmail\" \n            type=\"email\" \n            name=\"email\" \n            placeholder=\"Enter user email\"\n            onChange={setCurrentUser}\n            value={list.currentUser.email} \n          /><br />\n          <Button type=\"submit\">Add user</Button>\n        </form>\n        \n      \n        {error && <h3>{error}</h3>}\n        <Heading>My List</Heading>\n        {/* <List primary>{allUsers}</List>   */}\n        <List>{allUsers.length < 1 ? (\n            <li><b>No users in the list</b></li>\n            ) : allUsers }\n          </List>\n            \n            { allUsers.length > 0 &&\n              <Button className=\"btn\" onClick={() => sortUsers(sortOrder)}>\n                Sort users by name\n              </Button>\n            }\n      </Main>\n\n      <Main>\n        <Heading>Api Users</Heading>\n        \n          {apiUsers.loading ? (\n            <li className=\"loading\">Loading Data...</li>\n          ): displayApiUsers}\n      </Main>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}